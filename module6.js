/* Задание 1

Дан массив. Нужно вывести в консоль количество чётных и нечётных элементов в массиве. Если в массиве есть нулевой элемент, то он учитывается и выводится отдельно. 

При выполнении задания необходимо учесть, что массив может содержать не только числа, но и, например, знаки, null и так далее.

На этот раз оформите решение в виде функции, постарайтесь дать этой функции корректное название, вызовите функцию, проанализируйте синтаксис.
*/

let arr = [8, 3, 2, 6, 9, 0];

function counterEvenOdd() {

let count=0;
let numberNull=0;
let even=0;
let odd=0;

 for (let i = 0; i < arr.length; i++) {
    if (typeof arr[i] === "number" || !isNaN(arr[i])) {
        count += 1;
        if (arr[i] === 0) {
            numberNull += 1;
        } else if (arr[i] % 2 === 0) {
            even += 1;
        } else {
            odd += 1;
        }
    }
}

console.log(`В массиве: ${count} цифр, ${ numberNull} нулей, ${even} чётных, ${odd} нечётных!`);

}

counterEvenOdd();


/*Задание 2.

Написать функцию, которая принимает на входе любое число (но не больше 1 000), определяет, является ли оно простым, и выводит простое число или нет. Если введено больше 1 000, то выводится сообщение, что данные неверны. Обратите внимание на числа 0 и 1.

Здесь вам пригодятся знания из предыдущего модуля — циклы и условные операторы.
*/
let input = prompt('Введите число от 0 до 1000')
let number  =+input;
let simple= true;
if(!isNaN(number) && number <1000){
	for( let i = 2; i < number; i++) {
		if(number %i==0){
			simple=false;
			break;
		}
	}
	console.log(simple?'простое':'составное');
}else{
	console.log('неверные данные');
}

/* Задание 3.
Написать функцию, которая принимает число как аргумент и возвращает функцию, которая также принимает число как 
аргумент и возвращает сумму этих двух чисел. Выведите в консоль результат.
*/

function f1(a) {
	return function (b) {
      return a+b;
	}
}

let res=f1(7)(4);
console.log(res);


/* Задание 4.

Напишите функцию, которая принимает два числа. Каждую секунду необходимо выводить в консоль, начиная от первого и заканчивая вторым. Используйте setInterval.

Например, пользователь ввёл числа 5 и 15. Каждую секунду в консоль должно печататься число, начиная с 5 и заканчивая 15 (всего 11 чисел: 5 6 7 8 9 10 11 12 13 14 15).
*/

function printNumbers(from, to) {
  let current = from;

  let timerId = setInterval(function() {
    console.log(current);
    if (current == to) {
      clearInterval(timerId);
    }
    current++;
  }, 1000);
}


printNumbers(5, 15);




/* Задание 5.
Напишите функцию, которая принимает два натуральных числа x и n и возвращает x в степени n. Иначе говоря, умножает x на себя n раз и возвращает результат.

Используйте Arrow Function синтаксис.

Протестируйте функцию на любых значениях и выведите результат в консоль.
*/

const numPow = (x, n) => {
    let result = x;
    for (let i = 1; i < n; i++) {
      result *= x;
    }
    return result;
    
  };
  
  console.log(numPow(3,2));
  console.log(numPow(12,2));
  console.log(numPow(9,8));























